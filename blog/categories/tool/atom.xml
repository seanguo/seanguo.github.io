<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tool | Sean's Blog]]></title>
  <link href="http://www.seanguo.com/blog/categories/tool/atom.xml" rel="self"/>
  <link href="http://www.seanguo.com/"/>
  <updated>2017-05-28T21:03:34+08:00</updated>
  <id>http://www.seanguo.com/</id>
  <author>
    <name><![CDATA[Sean Guo]]></name>
    <email><![CDATA[seanguo85@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vagrant+Chef]]></title>
    <link href="http://www.seanguo.com/blog/2017/03/12/vagrant-plus-chef/"/>
    <updated>2017-03-12T19:32:51+08:00</updated>
    <id>http://www.seanguo.com/blog/2017/03/12/vagrant-plus-chef</id>
    <content type="html"><![CDATA[<h2>引言</h2>

<p>前面我介绍了Chef的环境搭建和简单的cookbook的创建执行，也介绍了如果用Vagrant来快速搭建一台虚拟机。但是所有的东西都停留在hello world的阶段，这篇文章就是结合这两个生产力工具来搭建一组<del>可以实际使用</del>用来做rails开发的server。</p>

<h2>Chef Provisioning</h2>

<p>我们知道Vagrant包含多种不同类型的provisioner，而Chef就是其中内置的一种，所以我们是可以直接使用的。这里我们用到的是chef_solo, Chef Solo是Chef Client的单机版，运行不依赖于Chef Server。</p>

<p>第一步我们要下载我们需要安装的组件的cookbook，这里我们会用到第三方的cookbook，因为在<a href="https://supermarket.chef.io/cookbooks/">社区</a>里已经有很多成熟的cookbook了。但是手工下载的方式不太方便，这里我们用到cookbook的依赖管理的工具: <a href="https://docs.chef.io/berkshelf.html">Berkshelf</a>。它和Ruby的gem管理文件Gemfile语法类似，它的配置文件是Berksfile。我们在当前文件夹（我这里是<strong>vagrant_test</strong>）创建一个空的Berksfile。chef-dk里面已经包含Berkshelf的命令行工具了，对应的命令是<strong>berks</strong>, 但是Vagrant想要用Berkshelf的时候我们还要装个插件来实现，可以用下面的命令来安装最新Berkshelf的插件。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant plugin install vagrant-berkshelf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后编辑Berksfile加上如下两行：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://supermarket.chef.io&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//su</span><span class="n">permarket</span><span class="o">.</span><span class="n">chef</span><span class="o">.</span><span class="n">io</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rsquo;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">cookbook</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
source语句指定了去supermarket.chef.io搜索下载cookbook, 第二行声明我们依赖于一个叫rails的cookbook，version为0.9.2，关于version的语法可以<a href="https://docs.chef.io/config_rb_metadata.html#cookbook-version-constraints">戳这里</a>。</p>

<p>我们接着创建一个新的Vagrantfile, 这里我们打算创建两个虚拟机，一个作为rails的主server，另一个用来安装mysql。我们先看第一台虚拟机的配置：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;ndash;&lt;em&gt;&amp;ndash; mode: ruby &amp;ndash;&lt;/em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;vi: set ft=ruby :&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  #base box for all machines</span>
</span><span class='line'><span class="sr">  config.vm.box = &amp;ldquo;bento/</span><span class="n">centos</span><span class="o">-</span><span class="mi">6</span><span class="o">.</span><span class="mi">7</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  #define a VM named rails</span>
</span><span class='line'><span class="sr">  config.vm.define &amp;ldquo;rails&amp;rdquo; do |rails|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&quot;virtualbox&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="p">,</span> <span class="n">override</span><span class="o">|</span>
</span><span class='line'>  <span class="n">v</span><span class="o">.</span><span class="n">name</span>           <span class="o">=</span> <span class="s2">&quot;rails&quot;</span>
</span><span class='line'>  <span class="n">override</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.50.20&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#configure chef provisoning per VM</span>
</span><span class='line'><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&quot;shell&quot;</span><span class="p">,</span> <span class="ss">inline</span><span class="p">:</span> <span class="s2">&quot;yum -y groupinstall &#39;Development Tools&#39;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&quot;chef_solo&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">node_name</span> <span class="o">=</span> <span class="s2">&quot;rails&quot;</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="ss">:debug</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;run_list&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">[</span><span class="s2">&quot;rails&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
然后我们启动这台rails虚拟机，多虚拟机配置的启动需要指定虚拟机的名字，要不就是默认全部启动。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant up rails
</span></code></pre></td></tr></table></div></figure></notextile></div>
这块儿由于是第一次启动这个虚拟机，它会首先下载需要的cookbook，然后映射到虚拟机里，启动虚拟机之后会首先下载安装Chef，这个过程很耗时间。</p>

<p>这里定义了两个provisioning，一个是用sh安装Rails依赖的开发工具包。另一个是利用rails这个cookbook来配置Rails的环境。
我这块遇到了在墙内会超时的问题。科学上网后解决了但是还是很耗时间，主要是下载Chef的安装包费时间。我们可以在其装好了chef和dev tools之后把这个box存起来作为以后的base box。命令如下:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant package &amp;mdash;base rails
</span><span class='line'>vagrant box add mybase package.box
</span></code></pre></td></tr></table></div></figure></notextile></div>
安装完box之后可以用下面的命令查看是否安装成功:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant box list                &lt;br/&gt;
</span><span class='line'>bento/centos-6.7 <span class="o">(</span>virtualbox, 2.2.7<span class="o">)</span>
</span><span class='line'>mybase           <span class="o">(</span>virtualbox, 0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
以后就可以用mybase作为box的name来复用已经下载安装好Chef和dev tools的box。</p>

<p>安装成功后我们可以用如下命令登录进去:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant ssh rails
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后我们定义另外一个虚拟机用来安装mysql，这里我们取名为mysql:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">mysql</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">do</span> <span class="o">|</span><span class="n">mysql</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;mysql.vm.provider &quot;virtualbox&quot; do |v, override|</span>
</span><span class='line'><span class="sr">  v.name           = &quot;mysql&quot;</span>
</span><span class='line'><span class="sr">  override.vm.network :private_network, ip: &quot;192.168.50.21&quot;</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">mysql.vm.provision &quot;chef_solo&quot; do |chef|</span>
</span><span class='line'><span class="sr">  chef.node_name = &quot;mysql&quot;</span>
</span><span class='line'><span class="sr">  chef.log_level = :debug</span>
</span><span class='line'><span class="sr">  chef.json = {</span>
</span><span class='line'><span class="sr">    &quot;run_list&quot; =&amp;gt; [&quot;vagrant_chef::mysql&quot;]</span>
</span><span class='line'><span class="sr">  }</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt; end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
因为对这个cookbook的调用不能直接通过runlist，需要在recipe里调用它的resource来进行，我们需要把当前目录变成一个cookbook。一个cookbook的最小因素就是一个用来自描述的metadata.rb
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span>             <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">vagrant_chef</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">maintainer</span>       <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">YOUR_NAME</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">maintainer_email</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">YOUR_EMAIL</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">license</span>          <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">All</span> <span class="n">rights</span> <span class="n">reserved</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">description</span>      <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Installs</span><span class="o">/</span><span class="no">Configures</span> <span class="n">mysql</span> <span class="n">server</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">version</span>          <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;depends &amp;ldquo;mysql&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这里我们还要加上对mysql的依赖，只有这样才能保证使用mysql的resource之前对mysql的依赖都全部被加载好。然后我们需要在Berksfile里指定mysql的cookbook版本，这样Berkshelf插件才会把这个新依赖的cookbook抓下来:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;https://supermarket.chef.io&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//su</span><span class="n">permarket</span><span class="o">.</span><span class="n">chef</span><span class="o">.</span><span class="n">io</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rsquo;</span>
</span><span class='line'><span class="sr">metadata&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">cookbook</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;cookbook &amp;lsquo;mysql&amp;rsquo;, &amp;lsquo;~&gt; 8.2.0&amp;rsquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
我们还加上了一行metadata，表示我们解析当前目录的metadata.rb, 把当前这个cookbook也加载进来。然后我们创建一个receipes文件夹，创建一个mysql.rb:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">mysql_service</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">mysql</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">port</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">3306</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">version</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">5</span><span class="o">.</span><span class="mi">5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">initial_root_password</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">change</span> <span class="n">me</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:start</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这个Recipe用来安装设置mysql， 可以看到上面我们中对虚拟机的provisioning的配置里可以通过把<strong>vagrant_chef::mysql</strong>加到runlist来实现对这个Recipe的调用。
所有都做好我们可以调用
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant up mysql
</span></code></pre></td></tr></table></div></figure></notextile></div>
这样mysql这个虚拟机也会被创建设置好。</p>

<p>本来就想写个vagrant+chef的教程，结果大部分时间花在调试这两个别人写的cookbook。终于还是放弃了，所以这个教程的Chef安装部分是跑不起来的，仅供参考。但是其中你也能学到多个虚拟机的配置，组网，如何在Vagrant使用Chef, Berkshelf这些东西。</p>

<p>完整的Vagrantfile如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;ndash;&lt;em&gt;&amp;ndash; mode: ruby &amp;ndash;&lt;/em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;vi: set ft=ruby :&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  #base box for all machines</span>
</span><span class='line'><span class="sr">  config.vm.box = &amp;ldquo;bento/</span><span class="n">centos</span><span class="o">-</span><span class="mi">6</span><span class="o">.</span><span class="mi">7</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  #define a VM named rails</span>
</span><span class='line'><span class="sr">  config.vm.define &amp;ldquo;rails&amp;rdquo; do |rails|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&quot;virtualbox&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="p">,</span> <span class="n">override</span><span class="o">|</span>
</span><span class='line'>  <span class="n">v</span><span class="o">.</span><span class="n">name</span>           <span class="o">=</span> <span class="s2">&quot;rails&quot;</span>
</span><span class='line'>  <span class="n">override</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.50.20&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#configure chef provisoning per VM</span>
</span><span class='line'><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&quot;shell&quot;</span><span class="p">,</span> <span class="ss">inline</span><span class="p">:</span> <span class="s2">&quot;yum -y groupinstall &#39;Development Tools&#39;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">rails</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&quot;chef_solo&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">node_name</span> <span class="o">=</span> <span class="s2">&quot;rails&quot;</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="ss">:debug</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;run_list&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">[</span><span class="s2">&quot;rails&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  config.vm.define &amp;ldquo;mysql&amp;rdquo; do |mysql|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">mysql</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&quot;virtualbox&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="p">,</span> <span class="n">override</span><span class="o">|</span>
</span><span class='line'>  <span class="n">v</span><span class="o">.</span><span class="n">name</span>           <span class="o">=</span> <span class="s2">&quot;mysql&quot;</span>
</span><span class='line'>  <span class="n">override</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;192.168.50.21&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&quot;chef_solo&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">node_name</span> <span class="o">=</span> <span class="s2">&quot;mysql&quot;</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="ss">:debug</span>
</span><span class='line'>  <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;run_list&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">[</span><span class="s2">&quot;vagrant_chef::mysql&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef 介绍 Part1 Setup]]></title>
    <link href="http://www.seanguo.com/blog/2017/02/17/chefjie-shao/"/>
    <updated>2017-02-17T20:20:59+08:00</updated>
    <id>http://www.seanguo.com/blog/2017/02/17/chefjie-shao</id>
    <content type="html"><![CDATA[<h2>引言</h2>

<p>Chef是一个自动化部署的工具。它的思想是“Infrastructure as code”, 所以整个DevOps流程下来都是代码，都可以保存在代码仓库里面。像Chef之类的工具出现之前，简单部署的话就是手工来了，像Java的web应用手工部署个War包或者改个配置文件什么的，高级点的可能会写个shell脚本来自动化。但是当需要管理的机器增多或者配置项增多，或者不同的机器要求不一样的配置的话，就力不从心了。Chef出现之后，这样的难题就迎刃而解了。</p>

<p>Chef的实现是用的Ruby，所以它的配置脚本也是基于Ruby的, 所以想要学好Chef也需要了解一下Ruby的基本语法，如果想要扩展，定制，增加自己的Chef库的话，还是需要仔细学习一下Ruby才行。这导致Chef陡峭的学习曲线，了解个皮毛很容易，但是想要深入了解，诊断问题的话需要做很多功课才可以。</p>

<p>想要学好，我们先搭环境，在应用中学习是最有成效的。</p>

<h2>安装</h2>

<p>Chef安装很简单，就去下载一个叫做<a href="https://downloads.chef.io/">Chef DK</a>的包安装就可以了。这个会把Chef全家桶装好，里面开发测试用的所有工具都包含了。</p>

<p>安装完后可以运行下面的命令检查一下
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ chef-solo -v
</span><span class='line'>Chef: 12.17.44
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>第一个程序</h2>

<p>我们可以通过下面的命令来创建我们的第一个Chef程序(它叫Cookbook)
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">chef</span> <span class="n">generate</span> <span class="n">cookbook</span> <span class="n">sample1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>下面是这个cookbook的目录结构:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.
</span><span class='line'>├── Berksfile
</span><span class='line'>├── README.md
</span><span class='line'>├── chefignore
</span><span class='line'>├── metadata.rb
</span><span class='line'>├── recipes
</span><span class='line'>│   └── default.rb
</span><span class='line'>├── spec
</span><span class='line'>│   ├── spec_helper.rb
</span><span class='line'>│   └── unit
</span><span class='line'>│       └── recipes
</span><span class='line'>│           └── default_spec.rb
</span><span class='line'>├── <span class="nb">test</span>
</span><span class='line'>│   └── smoke
</span><span class='line'>│       └── default
</span><span class='line'>│           └── default_test.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>简单来说Chef的运行是顺序执行一个一个的Resource，Chef在Ruby语法的基础上封装了自己的DSL来把经常用到的命令，配置文件的管理等抽象成一个个的Resource。这些Resource根据需求顺序放在Chef的脚本里（它叫Recipe）就可以执行了。所以Chef的入口是Recipe，下面是一个简单的例子。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">This</span> <span class="n">is</span> <span class="n">myfirst</span> <span class="n">sample</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mo">0755</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这个主代码块我们要放到recipes/default.rb里</p>

<p>像这个file Resource就会在制定的路径创建一个php文件，然后填充文件的内容，设置用户和组，然后还有权限。简单而直观，没有Ruby的背景也能够轻易理解。
要写在本地运行起来，我们还要创建两个文件：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat ~/.chef/solo.rb
</span><span class='line'>cookbook_path <span class="o">[</span>&amp;lsquo;~/blog_samples/chef_intro/&amp;rsquo;<span class="o">]</span>%
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat test.json
</span><span class='line'><span class="o">{</span>
</span><span class='line'>&amp;ldquo;run_list&amp;rdquo;:<span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后可以用下面的命令在本地来运行这个cookbook:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chef-solo -j test.json -c ~/.chef/solo.rb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后我们看到了如下的输出
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Starting Chef Client, version 12.17.44
</span><span class='line'>resolving cookbooks <span class="k">for </span>run list: <span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>
</span><span class='line'>Synchronizing Cookbooks:
</span><span class='line'>  &amp;ndash; sample1 <span class="o">(</span>0.1.0<span class="o">)</span>
</span><span class='line'>Installing Cookbook Gems:
</span><span class='line'>Compiling Cookbooks&amp;hellip;
</span><span class='line'>Converging 1 resources
</span><span class='line'>Recipe: sample1::default
</span><span class='line'>  * file<span class="o">[</span>/tmp/test.txt<span class="o">]</span> action create&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;- create new file /tmp/test.txt
</span><span class='line'>- update content in file /tmp/test.txt from none to ea8447
</span><span class='line'>--- /tmp/test.txt   2017-02-23 21:20:46.000000000 +0800
</span><span class='line'>+++ /tmp/.chef-test20170223-2804-c8bnol.txt 2017-02-23 21:20:46.000000000 +0800
</span><span class='line'>@@ -1 +1,2 @@
</span><span class='line'>+This is myfirst sample
</span><span class='line'>- change mode from <span class="s1">&#39;&#39;</span> to <span class="s1">&#39;0755&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Running handlers:
</span><span class='line'>Running handlers <span class="nb">complete</span>
</span><span class='line'>Chef Client finished, 1/1 resources updated in 12 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这表示成功执行完了，可以到那个地方检查一下这个文件是否被创建了。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /tmp/test.txt
</span><span class='line'>This is myfirst sample
</span></code></pre></td></tr></table></div></figure></notextile></div>   <br/>
到这之后然后可能会想要修改文件的mode， 这可以通过Attribute来实现。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">This</span> <span class="n">is</span> <span class="n">myfirst</span> <span class="n">sample</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="n">node</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">chef_intro</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">sample1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">file_mode</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这些Attribute是在另一个Ruby文件（attributes/default.rb）定义的：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">default</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">chef_intro</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">sample1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">file_mode</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">755</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
然后修改我们的用户配置test.json为:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>
</span><span class='line'>  &amp;ldquo;run_list&amp;rdquo;:<span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>,
</span><span class='line'>  &amp;ldquo;chef_intro&amp;rdquo;: <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;<span class="s2">&quot;sample1&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;file_mode&quot;</span>: <span class="s2">&quot;644&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="o">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div>
 再次运行这个cookbook可以看到输出已经把文件的mode改成644了，通过这种方式我们就可以通过从外面的配置覆盖cookbook的默认值，达到定制化配置的目的。
 <div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> Recipe: sample1::default
</span><span class='line'>  * file<span class="o">[</span>/tmp/test.txt<span class="o">]</span> action create&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;- change mode from <span class="s1">&#39;0755&#39;</span> to <span class="s1">&#39;0644&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant 入门]]></title>
    <link href="http://www.seanguo.com/blog/2016/11/16/vagrant-ru-men/"/>
    <updated>2016-11-16T11:48:43+08:00</updated>
    <id>http://www.seanguo.com/blog/2016/11/16/vagrant-ru-men</id>
    <content type="html"><![CDATA[<h2>介绍</h2>

<p>Vagrant是一个虚拟机管理工具，通过它你可以用几个简单的命令快速搭建一个配置好的虚拟机环境。它提供了多种虚拟机provider所以你可以用同一个设置文件去驱动设置不同的虚拟机。<br><br>
它的核心文件叫做Vagrantfile，所有的虚拟机的配置都是在这里。我们可以在里面定义各个provider的配置，如果去用provisioner去设置虚拟机，安装应用程序。有了这个配置文件，你就可以很方便的快速重复构建一个测试环境。这让Docker出现之前成为了开发员很热衷的一个环境设置工具。
我这篇文章将会一步一步来搭建一个测试环境。这样从头来讲解Vagrant的基本使用方法，希望可以帮到那些想要学习Vagrant的人。</p>

<h2>初始设置</h2>

<p>首先你需要去<a href="https://www.vagrantup.com/downloads.html">下载</a>适合你操作系统的Vagrant安装包。安装完之后我们还需要安装<a href="https://www.virtualbox.org/">VirtualBox</a>来作为演示用的provider。因为Virtualbox是Vagrant的provider，当然当你熟悉Vagrant之后可以通过修改全局的配置文件来修改默认的provider。一切都安装好了之后我们需要打开一个shell窗口，新建一个文件夹作为这次演示用的。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir vagrant_leanring
</span><span class='line'><span class="nb">cd </span>vagrant_leanring
</span><span class='line'>vagrant init
</span></code></pre></td></tr></table></div></figure></notextile></div>
这里用到了第一个命令 <em>vagrant init</em> 这个命令会在当然目录生成如下这样的一个Vagrantfile，我们可以以这个为模板来修改运行我们自己的演示。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;ndash;&lt;em&gt;&amp;ndash; mode: ruby &amp;ndash;&lt;/em</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;vi: set ft=ruby :&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">All</span> <span class="no">Vagrant</span> <span class="n">configuration</span> <span class="n">is</span> <span class="n">done</span> <span class="n">below</span><span class="o">.</span> <span class="no">The</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">in</span> <span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;configures the configuration version (we support older styles for&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">backwards</span> <span class="n">compatibility</span><span class="p">)</span><span class="o">.</span> <span class="no">Please</span> <span class="n">don</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">t</span> <span class="n">change</span> <span class="n">it</span> <span class="k">unless</span> <span class="n">you</span> <span class="n">know</span> <span class="n">what</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;you&amp;rsquo;re doing.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># The most common configuration options are documented and commented below.</span>
</span><span class='line'>  <span class="c1"># For a complete reference, please see the online documentation at</span>
</span><span class='line'>  <span class="c1"># &lt;a href=&quot;https://docs.vagrantup.com.&quot;&gt;https://docs.vagrantup.com.&lt;/a&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Every Vagrant development environment requires a box. You can search for</span>
</span><span class='line'>  <span class="c1"># boxes at &lt;a href=&quot;https://atlas.hashicorp.com/search.&quot;&gt;https://atlas.hashicorp.com/search.&lt;/a&gt;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">base</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Disable automatic box update checking. If you disable this, then</span>
</span><span class='line'><span class="sr">  # boxes will only be checked for updates when the user runs</span>
</span><span class='line'><span class="sr">  # &lt;code&gt;vagrant box outdated&lt;/</span><span class="n">code</span><span class="o">&gt;.</span> <span class="no">This</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">recommended</span><span class="o">.</span>
</span><span class='line'>  <span class="c1"># config.vm.box_check_update = false&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Create a forwarded port mapping which allows access to a specific port</span>
</span><span class='line'>  <span class="c1"># within the machine from a port on the host machine. In the example below,</span>
</span><span class='line'>  <span class="c1"># accessing &amp;ldquo;localhost:8080&amp;rdquo; will access port 80 on the guest machine.</span>
</span><span class='line'>  <span class="c1"># config.vm.network &amp;ldquo;forwarded_port&amp;rdquo;, guest: 80, host: 8080&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Create a private network, which allows host-only access to the machine</span>
</span><span class='line'>  <span class="c1"># using a specific IP.</span>
</span><span class='line'>  <span class="c1"># config.vm.network &amp;ldquo;private_network&amp;rdquo;, ip: &amp;ldquo;192.168.33.10&amp;rdquo;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Create a public network, which generally matched to bridged network.</span>
</span><span class='line'>  <span class="c1"># Bridged networks make the machine appear as another physical device on</span>
</span><span class='line'>  <span class="c1"># your network.</span>
</span><span class='line'>  <span class="c1"># config.vm.network &amp;ldquo;public_network&amp;rdquo;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Share an additional folder to the guest VM. The first argument is</span>
</span><span class='line'>  <span class="c1"># the path on the host to the actual folder. The second argument is</span>
</span><span class='line'>  <span class="c1"># the path on the guest to mount the folder. And the optional third</span>
</span><span class='line'>  <span class="c1"># argument is a set of non-required options.</span>
</span><span class='line'>  <span class="c1"># config.vm.synced_folder &amp;ldquo;../data&amp;rdquo;, &amp;ldquo;/vagrant_data&amp;rdquo;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Provider-specific configuration so you can fine-tune various</span>
</span><span class='line'>  <span class="c1"># backing providers for Vagrant. These expose provider-specific options.</span>
</span><span class='line'>  <span class="c1"># Example for VirtualBox:</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># config.vm.provider &amp;ldquo;virtualbox&amp;rdquo; do |vb|</span>
</span><span class='line'>  <span class="c1">#   # Display the VirtualBox GUI when booting the machine</span>
</span><span class='line'>  <span class="c1">#   vb.gui = true</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1">#   # Customize the amount of memory on the VM:</span>
</span><span class='line'>  <span class="c1">#   vb.memory = &amp;ldquo;1024&amp;rdquo;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># View the documentation for the provider you are using for more</span>
</span><span class='line'>  <span class="c1"># information on available options.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Define a Vagrant Push strategy for pushing to Atlas. Other push strategies</span>
</span><span class='line'>  <span class="c1"># such as FTP and Heroku are also available. See the documentation at</span>
</span><span class='line'>  <span class="c1"># &lt;a href=&quot;https://docs.vagrantup.com/v2/push/atlas.html&quot;&gt;https://docs.vagrantup.com/v2/push/atlas.html&lt;/a&gt; for more information.</span>
</span><span class='line'>  <span class="c1"># config.push.define &amp;ldquo;atlas&amp;rdquo; do |push|</span>
</span><span class='line'>  <span class="c1">#   push.app = &amp;ldquo;YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME&amp;rdquo;</span>
</span><span class='line'>  <span class="c1"># end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Enable provisioning with a shell script. Additional provisioners such as</span>
</span><span class='line'>  <span class="c1"># Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span>
</span><span class='line'>  <span class="c1"># documentation for more information about their specific syntax and use.</span>
</span><span class='line'>  <span class="c1"># config.vm.provision &amp;ldquo;shell&amp;rdquo;, inline: &amp;lt;&amp;lt;-SHELL</span>
</span><span class='line'>  <span class="c1">#   sudo apt-get update</span>
</span><span class='line'>  <span class="c1">#   sudo apt-get install -y apache2</span>
</span><span class='line'>  <span class="c1"># SHELL</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
我们可以看到里面有一些很好的注释来帮助我们快速的生成自己需要的配置。这里能看到这个文件的格式是Ruby语法的，因为Vagrant这个工具是用Ruby来实现，所以为了更好的了解这个配置文件我们会在下一章讲解一下基本的Ruby语法。因为Ruby也是学习Chef需要的语言，我会在下一篇blog里讲解一下基础的Chef知识。</p>

<h2>Vagrant需要了解的Ruby语法</h2>

<p>我们通过上面的Vagrantfile看到Ruby里面的注释是用<em>#</em>来开始的。然后我们看到了
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这个其实是调用了Vagrant这个mudule上的configure方法，这个方法接受两个参数：第一个参数是2（表示Version），第二个参数是一个代码块(block)，因为根据Ruby的语法, 方法最后一个参数为block的时候我们可以放到括号外面，这种调用也等价于
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这是block的两种表示方法，通过这种block的形式我们可以很方便的把一段代码作为参数传给一个方法。这里这个方法的作用就是去设置Vagrant的各项参数。我们可以看到被注释的代码里面也很多再次用到了嵌套的block的方式。<br><br>
需要更多的了解Ruby这门语言的话，这里有个很好的学习Ruby的<a href="http://ruby-doc.com/docs/ProgrammingRuby/">网站</a>，虽然是英文的但是值得一读。</p>

<h2>Box</h2>

<p>现在block的配置里唯一打开注释的就是
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">base</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Box是你的虚拟机启动时用的base image,所以你就不必从头去设置一个虚拟机。你可以去社区下载已经基本配置好的Box，然后基于它去搭建虚拟机。你可以去<a href="https://atlas.hashicorp.com/boxes/search">HashiCorp&rsquo;s Atlas box catalog</a>去查看社区已有的Box。这个<em>base</em>就是其中一个Box，<em>base</em>是这个Box的id。我们可以用下面的命令去添加一个Box到我们的本地环境中：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant box add hashicorp/precise32
</span></code></pre></td></tr></table></div></figure></notextile></div>
如果你用的OS是Mac的话，默认下载好的Box会被安装在<em>~/.vagrant.d/boxes</em>。然后我们修改Vagrantfile使用我们导入好的Box，因为base目前是不存在的：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">hashicorp</span><span class="o">/</span><span class="n">precise32</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Commands</h2>

<ul>
<li><em>vagrant up</em> 是启动一个虚拟机，默认的话会在Virtualbox里导入你指定的Box，然后启动。</li>
</ul>


<p>如果这时候你没有用<em>vagrant box add</em>导入Box的话，这时候Vagrant也会自动下载导入对于的Box。这个命令成功执行完毕之后你会在VirtualBox看到多了一个虚拟机。这个虚拟机的名字是<em>vagrant_learning_default_xxxxxx_xxx</em>。虚拟机名字的前面可以看出来是文件夹的名字，后面的default表示是默认的虚拟机因为一个Vagrantfile可以配置多个虚拟机，这个后面我们会看到。<br>
启动好了之后我们可以用<em>vagrant ssh</em>直接进到机器里。
与up相对应的命令有<br></p>

<ul>
<li><em>vagrant destroy</em> 销毁删除一个创建好的虚拟机。一般我们彻底不用的时候才会这样做，更常用的</li>
<li><em>vagrant halt</em> 关闭一个虚拟机，就是把虚拟机关机，这样的话就不会占用Cpu和内存。</li>
</ul>


<p>还有不太常用的命令像 <em>vagrant suspend/resume</em>是挂起或者恢复虚拟机。更多的可以参考官方文档。</p>

<h2>Provider</h2>

<p>Provider是Vagrant用来和不同种类虚拟机通信的驱动，我们在一个Vagrantfile可以配置多种Provider。安装好Vagrant好默认的Provider就是VirtualBox，所以我们在执行命令时不用传入Provider的名字。实际情况下我们有可能在一个Vagrantfile配置多个Provider来应对开发测试的不同阶段，例如我们可以配置一个VirtualBox的Provider做本地开发/测试，然后再定义一个EC2的Provider来部署到Amazon的云里，这样的配置就像下面这样:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;config.vm.provider &amp;ldquo;virtualbox&amp;rdquo; do |vb|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1"># Display the VirtualBox GUI when booting the machine</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">vb</span><span class="o">.</span><span class="n">gui</span> <span class="o">=</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Customize the amount of memory on the VM:</span>
</span><span class='line'><span class="sr">  vb.memory = &amp;ldquo;1024&amp;rdquo;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Configure the virtual machine name displayed in VirtualBox</span>
</span><span class='line'>  <span class="n">vb</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">vagrant_leanring</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;config.vm.provider :aws do |aws,overide|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">aws</span><span class="o">.</span><span class="n">security_groups</span>           <span class="o">=</span>  <span class="sx">%w(everything_open)</span>
</span><span class='line'><span class="n">aws</span><span class="o">.</span><span class="n">access_key_id</span>             <span class="o">=</span>  <span class="s2">&quot;YOUR KEY&quot;</span>
</span><span class='line'><span class="n">aws</span><span class="o">.</span><span class="n">secret_access_key</span>         <span class="o">=</span>  <span class="s2">&quot;YOUR SECRET KEY&quot;</span>
</span><span class='line'><span class="n">aws</span><span class="o">.</span><span class="n">ami</span>                       <span class="o">=</span>  <span class="s2">&quot;ami-xxx&quot;</span>
</span><span class='line'><span class="n">aws</span><span class="o">.</span><span class="n">instance_type</span>             <span class="o">=</span>  <span class="s2">&quot;m1.medium&quot;</span>
</span><span class='line'><span class="n">aws</span><span class="o">.</span><span class="n">keypair_name</span>              <span class="o">=</span>  <span class="s2">&quot;KEYPAIR NAME&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">overide</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span>              <span class="o">=</span>  <span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="n">overide</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">private_key_path</span>      <span class="o">=</span>  <span class="s2">&quot;PATH TO YOUR PRIVATE KEY&quot;</span>
</span><span class='line'><span class="n">overide</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span>                    <span class="o">=</span>  <span class="s1">&#39;dummy&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这样配置以后你可以用<em>vagrant up &mdash;provider=aws</em>来远程启动AWS云里的虚拟机。当然之前你需要安装AWS的<a href="https://github.com/mitchellh/vagrant-aws">Provider</a>和配置这个Provider需要的dummy Box。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant plugin install vagrant-aws&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;vagrant box add dummy &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&quot;</span>&gt;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>
接下来的教程我们还是以VirtualBox这个Provider为例来讲解。</p>

<h2>Shared folders</h2>

<p>我们接下来可以打开注释里的<em>config.vm.synced_folder</em>并修改映射到已经存在的一个文件夹。以我的机器为例：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">.</span><span class="o">/</span><span class="n">training</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">vagrant_data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这样的话可以把本机Host里的一个文件夹映射到Guest虚拟机里。修改这个设置之后需要重启虚拟机来生效，命令是
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vagrant</span> <span class="n">reload</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这样启动完之后登陆后你可以看到映射的文件夹:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant ssh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;vagrant@precise32:~<span class="nv">$ </span>ll /vagrant_data/
</span><span class='line'>total 16
</span><span class='line'>drwxr-xr-x  1 vagrant vagrant  238 Jul  4 10:40 ./
</span><span class='line'>drwxr-xr-x 24 root    root    4096 Nov 18 02:25 ../
</span><span class='line'>drwxr-xr-x  1 vagrant vagrant  170 Jul  4 10:39 cookbooks/
</span><span class='line'>drwxr-xr-x  1 vagrant vagrant  272 Jan  8  2016 Docker/
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash;  1 vagrant vagrant 8196 Jul  4 10:40 .DS_Store
</span><span class='line'>drwxr-xr-x  1 vagrant vagrant  102 Jul  4 10:39 intro/
</span><span class='line'>drwxr-xr-x  1 vagrant vagrant  102 Apr  5  2016 .vagrant/
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Network</h2>

<p>默认的虚拟机的网络是NAT形式的，我们可以从Vagrant启动的log里看出来：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">==</span>&gt; default: Preparing network interfaces based on configuration&amp;hellip;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;default: Adapter 1: nat
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; default: Forwarding ports&amp;hellip;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;default: <span class="nv">22</span> <span class="o">=</span>&amp;gt; 2202 <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>
我们可以看到默认做了一个端口映射，所以我们可以通过访问本机端口2202来访问虚拟机的22(ssh)端口:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#x74;&amp;#111;&amp;#x3a;&amp;#118;&amp;#97;&amp;#x67;&amp;#114;&amp;#97;&amp;#110;&amp;#x74;&amp;#64;&amp;#x31;&amp;#50;&amp;#55;&amp;#x2e;&amp;#48;&amp;#x2e;&amp;#48;&amp;#x2e;&amp;#x31;&quot;</span>&gt;&amp;#x76;&amp;#x61;&amp;#103;&amp;#x72;&amp;#97;&amp;#110;&amp;#x74;&amp;#x40;&amp;#x31;&amp;#50;&amp;#x37;&amp;#x2e;&amp;#48;&amp;#46;&amp;#x30;&amp;#x2e;&amp;#49;&lt;/a&gt; -p 2202
</span><span class='line'>The authenticity of host &amp;lsquo;<span class="o">[</span>127.0.0.1<span class="o">]</span>:2202 <span class="o">([</span>127.0.0.1<span class="o">]</span>:2202<span class="o">)</span>&amp;rsquo; can&amp;rsquo;t be established.
</span><span class='line'>ECDSA key fingerprint is SHA256:q7StLmS/+YYwF42lL4HQJdMQGcAPpkKgzVlxORTisGE.
</span><span class='line'>Are you sure you want to <span class="k">continue </span>connecting <span class="o">(</span>yes/no<span class="o">)</span>? yes&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#105;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#118;&amp;#97;&amp;#103;&amp;#x72;&amp;#97;&amp;#x6e;&amp;#x74;&amp;#x40;&amp;#x31;&amp;#x32;&amp;#55;&amp;#x2e;&amp;#x30;&amp;#x2e;&amp;#48;&amp;#46;&amp;#49;&quot;</span>&gt;&amp;#118;&amp;#x61;&amp;#103;&amp;#114;&amp;#x61;&amp;#x6e;&amp;#116;&amp;#64;&amp;#x31;&amp;#50;&amp;#x37;&amp;#x2e;&amp;#x30;&amp;#x2e;&amp;#x30;&amp;#x2e;&amp;#x31;&lt;/a&gt;&amp;rsquo;s password:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Last login: Fri Nov 18 02:26:09 2016 from 10.0.2.2
</span><span class='line'>vagrant@precise32:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这个就是vagrant ssh的实现原理，默认的用户名是<em>vagrant</em>密码也是<em>vagrant</em>。这样的网络结构做一些简单的部署测试可以的，比方说我们可以定义本机的8080端口映射到虚拟机的80端口：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">forwarded_port</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">8080</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
修改网络拓扑结构和配置之后也有重启虚拟机。从启动log我们可以看到端口成功映射了
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">==</span>&gt; default: Forwarding ports&amp;hellip;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;default: <span class="nv">80</span> <span class="o">=</span>&amp;gt; 8080 <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'>default: <span class="nv">22</span> <span class="o">=</span>&amp;gt; 2202 <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; default: Running &amp;lsquo;pre-boot&amp;rsquo; VM customizations&amp;hellip;
</span></code></pre></td></tr></table></div></figure></notextile></div>
还有一种常用的网络结构是<em>private_network</em>，这种网络结构会创建一个只有主机能和虚拟机通信的私网，这种是通过指定虚拟机内网IP的形式来配置:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">private_network</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">ip</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">192</span><span class="o">.</span><span class="mi">168</span><span class="o">.</span><span class="mi">33</span><span class="o">.</span><span class="mi">10</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这样的配置启动后，Host本机会拥有IP <em>192.168.33.1</em>, 这样本机和虚拟机就是一个网段，通信就没有障碍了。最后一种形式是<em>public_network</em>,这种就是为虚拟机建一个Bridge的网络，相当于虚拟机变成你现有网络里另一台机器。但是这种是受限于网络要求的，像我们公司就是不允许这种网络结构的，你的虚拟机得不到IP。<br>
当然这里网络配置都是针对本地的虚拟机，像是AWS，Openstack这种云里的虚拟机所在自己的Provider配置里来配置的。一般网络结构受限于云和Provider插件支持的类型。</p>

<h2>Provisioner</h2>

<p>现在虚拟机已经启动好了，我们需要配置,部署一些软件上去，这就用到了Provisioner。Vagrantfile也支持多个Provisioner，它们会按配置顺序挨个执行。例如我们可以打开注释里的：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">shell</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">inline</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span><span class="no">SHELL</span>
</span><span class='line'>   <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'>   <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apache2</span>
</span><span class='line'> <span class="no">SHELL</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
修改完之后我们又要用到一个新命令:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant provision
</span></code></pre></td></tr></table></div></figure></notextile></div>
这个命令会执行所有定义的provision命令block。之后我们会在控制台看到很长的一段输出，成功执行之后我们就装好了Apache, 我们可以打开浏览器试一试。因为我们已经配置好了端口映射，所以访问本机的8080端口应该能到Apache的欢迎页面。</p>

<blockquote><p>It works!</p>

<p>This is the default web page for this server.</p>

<p>The web server software is running but no content has been added, yet.</p></blockquote>

<br>


<p>这篇教程用到的完整Vagrantfile（去掉了一些注释）如下:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">v</span><span class="c1"># &amp;ndash;&lt;em&gt;&amp;ndash; mode: ruby &amp;ndash;&lt;/em&gt;&amp;ndash;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="ss">vi</span><span class="p">:</span> <span class="n">set</span> <span class="n">ft</span><span class="o">=</span><span class="n">ruby</span> <span class="p">:</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Vagrant.configure(2) do |config|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Every Vagrant development environment requires a box. You can search for</span>
</span><span class='line'>  <span class="c1"># boxes at &lt;a href=&quot;https://atlas.hashicorp.com/search.&quot;&gt;https://atlas.hashicorp.com/search.&lt;/a&gt;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">hashicorp</span><span class="o">/</span><span class="n">precise32</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Create a forwarded port mapping which allows access to a specific port</span>
</span><span class='line'><span class="sr">  # within the machine from a port on the host machine. In the example below,</span>
</span><span class='line'><span class="sr">  # accessing &amp;ldquo;localhost:8080&amp;rdquo; will access port 80 on the guest machine.</span>
</span><span class='line'><span class="sr">  config.vm.network &amp;ldquo;forwarded_port&amp;rdquo;, guest: 80, host: 8080&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Share an additional folder to the guest VM. The first argument is</span>
</span><span class='line'>  <span class="c1"># the path on the host to the actual folder. The second argument is</span>
</span><span class='line'>  <span class="c1"># the path on the guest to mount the folder. And the optional third</span>
</span><span class='line'>  <span class="c1"># argument is a set of non-required options.</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">.</span><span class="o">/</span><span class="n">training</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">vagrant_data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Provider-specific configuration so you can fine-tune various</span>
</span><span class='line'><span class="sr">  # backing providers for Vagrant. These expose provider-specific options.</span>
</span><span class='line'><span class="sr">  # Example for VirtualBox:</span>
</span><span class='line'><span class="sr">  config.vm.provider &amp;ldquo;virtualbox&amp;rdquo; do |vb|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1"># Display the VirtualBox GUI when booting the machine</span>
</span><span class='line'><span class="n">vb</span><span class="o">.</span><span class="n">gui</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Customize the amount of memory on the VM:</span>
</span><span class='line'><span class="n">vb</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="s2">&quot;1024&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Configure the virtual machine name displayed in VirtualBox</span>
</span><span class='line'><span class="n">vb</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;vagrant_leanring&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  config.vm.provider :aws do |aws,overide|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">aws</span><span class="o">.</span><span class="n">security_groups</span>           <span class="o">=</span>  <span class="sx">%w(everything_open)</span>
</span><span class='line'>  <span class="n">aws</span><span class="o">.</span><span class="n">access_key_id</span>             <span class="o">=</span>  <span class="s2">&quot;YOUR KEY&quot;</span>
</span><span class='line'>  <span class="n">aws</span><span class="o">.</span><span class="n">secret_access_key</span>         <span class="o">=</span>  <span class="s2">&quot;YOUR SECRET KEY&quot;</span>
</span><span class='line'>  <span class="n">aws</span><span class="o">.</span><span class="n">ami</span>                       <span class="o">=</span>  <span class="s2">&quot;ami-xxx&quot;</span>
</span><span class='line'>  <span class="n">aws</span><span class="o">.</span><span class="n">instance_type</span>             <span class="o">=</span>  <span class="s2">&quot;m1.medium&quot;</span>
</span><span class='line'>  <span class="n">aws</span><span class="o">.</span><span class="n">keypair_name</span>              <span class="o">=</span>  <span class="s2">&quot;KEYPAIR NAME&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">overide</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span>              <span class="o">=</span>  <span class="s2">&quot;root&quot;</span>
</span><span class='line'>  <span class="n">overide</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">private_key_path</span>      <span class="o">=</span>  <span class="s2">&quot;PATH TO YOUR PRIVATE KEY&quot;</span>
</span><span class='line'>  <span class="n">overide</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span>                    <span class="o">=</span>  <span class="s1">&#39;dummy&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Enable provisioning with a shell script. Additional provisioners such as</span>
</span><span class='line'><span class="sr">  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span>
</span><span class='line'><span class="sr">  # documentation for more information about their specific syntax and use.</span>
</span><span class='line'><span class="sr">  config.vm.provision &amp;ldquo;shell&amp;rdquo;, inline: &amp;lt;&amp;lt;-SHELL&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apache2</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="no">SHELL</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<br><br>


<p>这篇教程到这就告一段落了，我想我还会写第二部分讲述如何用一个Vagrantfile配置多个虚拟机，然后讲完Chef后还会写一个结合Vagrant和Chef的教程。</p>
]]></content>
  </entry>
  
</feed>
