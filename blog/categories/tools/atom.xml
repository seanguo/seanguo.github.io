<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Sean's Blog]]></title>
  <link href="http://www.seanguo.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://www.seanguo.com/"/>
  <updated>2017-03-04T09:40:22+08:00</updated>
  <id>http://www.seanguo.com/</id>
  <author>
    <name><![CDATA[Sean Guo]]></name>
    <email><![CDATA[seanguo85@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chef 介绍 Part1 Setup]]></title>
    <link href="http://www.seanguo.com/blog/2017/02/17/chefjie-shao/"/>
    <updated>2017-02-17T20:20:59+08:00</updated>
    <id>http://www.seanguo.com/blog/2017/02/17/chefjie-shao</id>
    <content type="html"><![CDATA[<h2>引言</h2>

<p>Chef是一个自动化部署的工具。它的思想是“Infrastructure as code”, 所以整个DevOps流程下来都是代码，都可以保存在代码仓库里面。像Chef之类的工具出现之前，简单部署的话就是手工来了，像Java的web应用手工部署个War包或者改个配置文件什么的，高级点的可能会写个shell脚本来自动化。但是当需要管理的机器增多或者配置项增多，或者不同的机器要求不一样的配置的话，就力不从心了。Chef出现之后，这样的难题就迎刃而解了。</p>

<p>Chef的实现是用的Ruby，所以它的配置脚本也是基于Ruby的, 所以想要学好Chef也需要了解一下Ruby的基本语法，如果想要扩展，定制，增加自己的Chef库的话，还是需要仔细学习一下Ruby才行。这导致Chef陡峭的学习曲线，了解个皮毛很容易，但是想要深入了解，诊断问题的话需要做很多功课才可以。想要学习，我们先当环境，在应用中学习是最有成效的。</p>

<h2>安装</h2>

<p>Chef安装很简单，就去下载一个叫做<a href="https://downloads.chef.io/">Chef DK</a>的包安装就可以了。这个会把Chef全家桶装好，里面开发测试用的所有工具都包含了。</p>

<p>安装完后可以运行下面的命令检查一下
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ chef-solo -v
</span><span class='line'>Chef: 12.17.44
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>第一个程序</h2>

<p>我们可以通过下面的命令来创建我们的第一个Chef程序(它叫Cookbook)
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">chef</span> <span class="n">generate</span> <span class="n">cookbook</span> <span class="n">sample1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>下面是这个cookbook的目录结构:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.
</span><span class='line'>├── Berksfile
</span><span class='line'>├── README.md
</span><span class='line'>├── chefignore
</span><span class='line'>├── metadata.rb
</span><span class='line'>├── recipes
</span><span class='line'>│   └── default.rb
</span><span class='line'>├── spec
</span><span class='line'>│   ├── spec_helper.rb
</span><span class='line'>│   └── unit
</span><span class='line'>│       └── recipes
</span><span class='line'>│           └── default_spec.rb
</span><span class='line'>├── <span class="nb">test</span>
</span><span class='line'>│   └── smoke
</span><span class='line'>│       └── default
</span><span class='line'>│           └── default_test.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>简单来说Chef的运行是顺序执行一个一个的Resource，Chef在Ruby语法的基础上封装了自己的DSL来把经常用到的命令，配置文件的管理等抽象成一个个的Resource。这些Resource根据需求顺序放在Chef的脚本里（它叫Recipe）就可以执行了。所以Chef的入口是Recipe，下面是一个简单的例子。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">This</span> <span class="n">is</span> <span class="n">myfirst</span> <span class="n">sample</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mo">0755</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这个主代码块我们要放到recipes/default.rb里</p>

<p>像这个file Resource就会在制定的路径创建一个php文件，然后填充文件的内容，设置用户和组，然后还有权限。简单而直观，没有Ruby的背景也能够轻易理解。
要写在本地运行起来，我们还要创建两个文件：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat ~/.chef/solo.rb
</span><span class='line'>cookbook_path <span class="o">[</span>&amp;lsquo;~/blog_samples/chef_intro/&amp;rsquo;<span class="o">]</span>%
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat test.json
</span><span class='line'><span class="o">{</span>
</span><span class='line'>&amp;ldquo;run_list&amp;rdquo;:<span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后可以用下面的命令在本地来运行这个cookbook:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chef-solo -j test.json -c ~/.chef/solo.rb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后我们看到了如下的输出
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Starting Chef Client, version 12.17.44
</span><span class='line'>resolving cookbooks <span class="k">for </span>run list: <span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>
</span><span class='line'>Synchronizing Cookbooks:
</span><span class='line'>  &amp;ndash; sample1 <span class="o">(</span>0.1.0<span class="o">)</span>
</span><span class='line'>Installing Cookbook Gems:
</span><span class='line'>Compiling Cookbooks&amp;hellip;
</span><span class='line'>Converging 1 resources
</span><span class='line'>Recipe: sample1::default
</span><span class='line'>  * file<span class="o">[</span>/tmp/test.txt<span class="o">]</span> action create&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;- create new file /tmp/test.txt
</span><span class='line'>- update content in file /tmp/test.txt from none to ea8447
</span><span class='line'>--- /tmp/test.txt   2017-02-23 21:20:46.000000000 +0800
</span><span class='line'>+++ /tmp/.chef-test20170223-2804-c8bnol.txt 2017-02-23 21:20:46.000000000 +0800
</span><span class='line'>@@ -1 +1,2 @@
</span><span class='line'>+This is myfirst sample
</span><span class='line'>- change mode from <span class="s1">&#39;&#39;</span> to <span class="s1">&#39;0755&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Running handlers:
</span><span class='line'>Running handlers <span class="nb">complete</span>
</span><span class='line'>Chef Client finished, 1/1 resources updated in 12 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这表示成功执行完了，可以到那个地方检察一下这个文件是否被创建了。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /tmp/test.txt
</span><span class='line'>This is myfirst sample
</span></code></pre></td></tr></table></div></figure></notextile></div>   <br/>
到这之后然后可能会想要修改这个mode， 这可以通过Attribute来实现。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">file</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">txt</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">This</span> <span class="n">is</span> <span class="n">myfirst</span> <span class="n">sample</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="n">node</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">chef_intro</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">sample1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">file_mode</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
这些Attribute是在另一个Ruby文件（attributes/default.rb）定义的：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">default</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">chef_intro</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">sample1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">][&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">file_mode</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">755</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
然后修改我们的用户配置test.json为:
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>
</span><span class='line'>  &amp;ldquo;run_list&amp;rdquo;:<span class="o">[</span>&amp;ldquo;sample1&amp;rdquo;<span class="o">]</span>,
</span><span class='line'>  &amp;ldquo;chef_intro&amp;rdquo;: <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;<span class="s2">&quot;sample1&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;file_mode&quot;</span>: <span class="s2">&quot;644&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="o">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div>
 再次运行这个cookbook可以看到输出已经把文件的mode改成644了，通过这种方式我们就可以从外面覆盖cookbook的默认值，达到定制化配置的目的。
 <div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> Recipe: sample1::default
</span><span class='line'>  * file<span class="o">[</span>/tmp/test.txt<span class="o">]</span> action create&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;- change mode from <span class="s1">&#39;0755&#39;</span> to <span class="s1">&#39;0644&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
